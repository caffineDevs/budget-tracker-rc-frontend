{"version":3,"sources":["logo.svg","inr.svg","assets/edit.svg","assets/save.svg","components/EditActions/EditActions.jsx","assets/plus.svg","components/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["EditActions","props","data","expenses","setExpenses","Index","crudAction","useState","date","name","amount","FormState","setFormState","handleOnChange","e","target","value","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Form","Group","Control","type","placeholder","onChange","Footer","Button","onClick","onHide","axios","post","then","res","put","_id","prevExpenses","Home","modalShow","setModalShow","undefined","setIndex","setCrudAction","useEffect","get","handleEdit","handleDelete","delete","formatDate","mydate","Date","getMonth","substring","getDate","getFullYear","length","map","expense","index","className","console","log","handleTrClick","src","inr","editIcon","saveIcon","style","backgroundColor","color","colSpan","reduce","accumulator","currentValue","show","plusBtn","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ef88873.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/inr.16728764.svg\";","export default __webpack_public_path__ + \"static/media/edit.01865706.svg\";","export default __webpack_public_path__ + \"static/media/save.80e87242.svg\";","import { Modal, Button, Form } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction EditActions(props) {\n  const { expenses, setExpenses, Index, crudAction } = props.data;\n  const [FormState, setFormState] = useState(\n    crudAction == \"Add\"\n      ? {\n          date: \"\",\n          name: \"\",\n          amount: \"\",\n        }\n      : expenses[Index]\n  );\n  const handleOnChange = (e) => {\n    switch (e.target.name) {\n      case \"Date\":\n        setFormState({ ...FormState, date: e.target.value });\n        break;\n\n      case \"Name\":\n        setFormState({ ...FormState, name: e.target.value });\n        break;\n\n      case \"Expense\":\n        setFormState({ ...FormState, amount: e.target.value });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSave = () => {\n    switch (crudAction) {\n      case \"Add\":\n        axios.post(\"http://localhost:8080/add\", FormState).then((res) => {\n          setExpenses([...expenses, FormState]);\n          props.onHide();\n        });\n        break;\n\n      case \"Edit\":\n        axios\n          .put(`http://localhost:8080/edit/${expenses[Index]._id}`, FormState)\n          .then((res) => {\n            setExpenses((prevExpenses) => {\n              prevExpenses[Index] = FormState;\n              return prevExpenses;\n            });\n            props.onHide();\n          });\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <>\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Modal heading\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group>\n            <Form.Control\n              type=\"date\"\n              placeholder=\"Date\"\n              value={FormState.date}\n              onChange={handleOnChange}\n              name=\"Date\"\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Item name\"\n              value={FormState.name}\n              onChange={handleOnChange}\n              name=\"Name\"\n            />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Expense\"\n              value={FormState.amount}\n              onChange={handleOnChange}\n              name=\"Expense\"\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Cancel</Button>\n          <Button onClick={handleSave}>Save</Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default EditActions;\n","export default __webpack_public_path__ + \"static/media/plus.c10a22f4.svg\";","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport inr from \"../../inr.svg\";\nimport editIcon from \"../../assets/edit.svg\";\nimport saveIcon from \"../../assets/save.svg\";\nimport EditActions from \"../EditActions/EditActions\";\nimport plusBtn from \"../../assets/plus.svg\";\n\nfunction Home() {\n  const [modalShow, setModalShow] = useState(false);\n  const [Index, setIndex] = useState(undefined);\n  const [crudAction, setCrudAction] = useState(undefined);\n  const [expenses, setExpenses] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"https://budget-tracker-backend-node.herokuapp.com/get\").then((res) => {\n      setExpenses(res.data.expenses);\n    });\n  }, []);\n\n  const handleTrClick = (e, index) => {\n    if (e.target.className == \"save-icon\") {\n      setIndex(index);\n      console.log(index, \"index\");\n    }\n  };\n\n  const handleEdit = (e) => {\n    setCrudAction(\"Edit\");\n    setModalShow(true);\n  };\n\n  const handleAddExpense = () => {\n    setCrudAction(\"Add\");\n    setModalShow(true);\n  };\n\n  const handleDelete = () => {\n    if (Index != undefined) {\n      axios\n        .delete(`https://budget-tracker-backend-node.herokuapp.com/del/${expenses[Index]._id}`)\n        .then((res) => {\n          // setExpenses((prevExpenses) => {\n          //   return prevExpenses.splice(Index, 1);;\n          // });\n        });\n    }\n  };\n\n  const formatDate = (date) => {\n    let mydate = new Date(date);\n    let month =\n      \"\" +\n      [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ][mydate.getMonth()];\n    return (\n      month.substring(0, 3) +\n      \"-\" +\n      mydate.getDate() +\n      \"-\" +\n      mydate.getFullYear()\n    );\n  };\n\n  return (\n    <>\n      <table>\n        <tbody>\n          <tr>\n            <th>Date</th>\n            <th>Name</th>\n            <th>Expenses</th>\n            <th>Edit</th>\n          </tr>\n          {expenses.length &&\n            expenses.map((expense, index) => {\n              return (\n                <tr\n                  key={`expenseRow_${index}`}\n                  onClick={(e) => handleTrClick(e, index)}\n                >\n                  <td>{formatDate(expense.date)}</td>\n                  <td id={`expenseNameId_${index}`}>{expense.name}</td>\n                  <td>\n                    <img src={inr} className=\"inr\" />\n                    {expense.amount}\n                  </td>\n                  <td>\n                    <div className=\"d-flex\">\n                      <img\n                        onClick={handleEdit}\n                        src={editIcon}\n                        className=\"save-icon\"\n                      />\n                      <img\n                        onClick={handleDelete}\n                        src={saveIcon}\n                        className=\"save-icon\"\n                      />\n                    </div>\n                  </td>\n                </tr>\n              );\n            })}\n          <tr>\n            <th style={{ backgroundColor: \"white\", color: \"red\" }}>Total</th>\n            <td className=\"total\"></td>\n            <td colSpan=\"2\" className=\"total\">\n              <img src={inr} className=\"inr\" />\n              {expenses.length &&\n                expenses\n                  .map((expense) => +expense.amount)\n                  .reduce(\n                    (accumulator, currentValue) => accumulator + currentValue,\n                    0\n                  )}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      {modalShow && (\n        <EditActions\n          show={modalShow}\n          onHide={() => setModalShow(false)}\n          data={{ expenses, setExpenses, Index, crudAction }}\n        />\n      )}\n\n      <div className=\"add-snippet-btn\">\n        <img\n          src={plusBtn}\n          className=\"cursor-pointer\"\n          onClick={handleAddExpense}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default Home;\n","import logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home/Home';\n\nfunction App() {\n  return (\n   <Home/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}